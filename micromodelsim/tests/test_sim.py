import os

import numpy as np

import micromodelsim as mmsim


def test_sim():
    bvecs = np.array([[0.283, 0.283, 0.917]])
    bvals = np.array([1])
    odf_sh = np.array(
        [
            0.2819866,
            -0.05017412,
            -0.02567583,
            0.06072918,
            0.00454286,
            -0.08981515,
            0.08523956,
            -0.10345886,
            0.14002803,
            -0.02400726,
            0.00441382,
            -0.0734104,
            0.02493886,
            -0.05071812,
            0.03643094,
            -0.02358766,
            0.04934635,
            0.001587,
            0.00608412,
            0.12300456,
            -0.00352434,
            -0.0260295,
            0.00825021,
            -0.02386365,
            -0.01857504,
            -0.03697283,
            0.01739406,
            0.01180586,
            0.00430038,
            -0.03305486,
            0.01168234,
            -0.03618626,
            -0.00807854,
            -0.01720432,
            0.01868493,
            -0.03608433,
            -0.05661061,
            0.00211097,
            -0.02214772,
            0.00789058,
            -0.0339894,
            0.01285262,
            -0.00134089,
            0.03898313,
            0.00133444,
        ]
    )
    gradient = mmsim.Gradient(bvals, bvecs)
    fs = np.array([1])
    ads = np.array([1])
    rds = np.array([1])
    signals = mmsim.compartment_model_simulation(gradient, fs, ads, rds, odf_sh)
    assert abs(signals[0] - np.exp(-1) < 1e-3)
